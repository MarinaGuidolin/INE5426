// Generated from /home/marina/Documents/Compiladores/INE5426/src/main/antlr4/ConvCC20201.g4 by ANTLR 4.8
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ConvCC20201Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		FUNCLIST=1, FUNCDEF=2, STATEMENT=3, VARDECL=4, T1=5, ATRIBSTAT=6, ATRIBSTAT1=7, 
		FUNCCALL=8, PRINTSTAT=9, READSTAT=10, RETURNSTAT=11, IFSTAT=12, FORSTAT=13, 
		STATELIST=14, ALLOCEXPRESSION=15, ALLOCEXPRESSION2=16, T2=17, EXPRESSION=18, 
		NUMEXPRESSION=19, T3=20, TERM=21, T4=22, UNARYEXPR=23, FACTOR=24, LVALUE=25, 
		IF=26, FOR=27, ELSE=28, RETURN=29, READ=30, PRINT=31, NEW=32, BREAK=33, 
		DEF=34, TYPE_STRING=35, TYPE_FLOAT=36, TYPE_INT=37, NULL=38, INT=39, FLOAT=40, 
		STRING=41, IDENT=42, LPAREN=43, RPAREN=44, LBRACE=45, RBRACE=46, LBRACK=47, 
		RBRACK=48, SEMI=49, COMMA=50, DOT=51, COLON=52, ASSIGN=53, ADD=54, SUB=55, 
		MUL=56, DIV=57, MOD=58, GT=59, LT=60, EQUAL=61, LE=62, GE=63, NOTEQUAL=64, 
		WHITESPACE=65;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"FUNCLIST", "FUNCLIST2", "FUNCDEF", "PARAMLIST", "PARAMLIST2", "STATEMENT", 
			"VARDECL", "A", "T1", "ATRIBSTAT", "ATRIBSTAT1", "ATRIBSTAT2", "FUNCCALL", 
			"PARAMLISTCALL", "PARAMLISTCALL2", "PRINTSTAT", "READSTAT", "RETURNSTAT", 
			"IFSTAT", "IFSTAT2", "FORSTAT", "STATELIST", "STATELIST2", "ALLOCEXPRESSION", 
			"ALLOCEXPRESSION2", "B", "T2", "EXPRESSION", "EXPRESSION2", "NUMEXPRESSION", 
			"C", "T3", "TERM", "D", "T4", "UNARYEXPR", "FACTOR", "LVALUE", "IF", 
			"FOR", "ELSE", "RETURN", "READ", "PRINT", "NEW", "BREAK", "DEF", "TYPE_STRING", 
			"TYPE_FLOAT", "TYPE_INT", "NULL", "INT", "FLOAT", "DIGITS", "STRING", 
			"IDENT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
			"SEMI", "COMMA", "DOT", "COLON", "ASSIGN", "ADD", "SUB", "MUL", "DIV", 
			"MOD", "GT", "LT", "EQUAL", "LE", "GE", "NOTEQUAL", "WHITESPACE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, "'if'", "'for'", "'else'", "'return'", "'read'", "'print'", 
			"'new'", "'break'", "'def'", "'string'", "'float'", "'int'", "'null'", 
			null, null, null, null, "'('", "')'", "'{'", "'}'", "'['", "']'", "';'", 
			"','", "'.'", "':'", "'='", "'+'", "'-'", "'*'", "'/'", "'%'", "'>'", 
			"'<'", "'=='", "'<='", "'>='", "'!='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "FUNCLIST", "FUNCDEF", "STATEMENT", "VARDECL", "T1", "ATRIBSTAT", 
			"ATRIBSTAT1", "FUNCCALL", "PRINTSTAT", "READSTAT", "RETURNSTAT", "IFSTAT", 
			"FORSTAT", "STATELIST", "ALLOCEXPRESSION", "ALLOCEXPRESSION2", "T2", 
			"EXPRESSION", "NUMEXPRESSION", "T3", "TERM", "T4", "UNARYEXPR", "FACTOR", 
			"LVALUE", "IF", "FOR", "ELSE", "RETURN", "READ", "PRINT", "NEW", "BREAK", 
			"DEF", "TYPE_STRING", "TYPE_FLOAT", "TYPE_INT", "NULL", "INT", "FLOAT", 
			"STRING", "IDENT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", 
			"RBRACK", "SEMI", "COMMA", "DOT", "COLON", "ASSIGN", "ADD", "SUB", "MUL", 
			"DIV", "MOD", "GT", "LT", "EQUAL", "LE", "GE", "NOTEQUAL", "WHITESPACE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ConvCC20201Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ConvCC20201.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2C\u0243\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\3\2\3\2\3\2\3\3\5\3\u00a6"+
		"\n\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\5\5\5\u00bd\n\5\3\6\3\6\5\6\u00c1\n\6\3\7\3\7\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\7\5\7\u00dc\n\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3"+
		"\b\3\b\5\b\u00ea\n\b\3\t\3\t\3\t\5\t\u00ef\n\t\3\n\3\n\3\n\3\n\3\13\3"+
		"\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\5\f\u0109\n\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\5\r\u0114\n"+
		"\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\5\17\u011e\n\17\3\20\3\20\5"+
		"\20\u0122\n\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\24\3\25\3\25\3\25\5\25\u0134\n\25\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\30\5\30\u0144\n\30\3\31\3\31\3\31"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\5\32\u0155"+
		"\n\32\3\33\3\33\3\33\5\33\u015a\n\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\5\36\u0177\n\36\3\37\3\37\3\37\3 \3 \3"+
		" \5 \u017f\n \3!\3!\3!\3!\5!\u0185\n!\3\"\3\"\3\"\3#\3#\3#\5#\u018d\n"+
		"#\3$\3$\3$\3$\3$\3$\5$\u0195\n$\3%\3%\3%\3%\3%\5%\u019c\n%\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\3&\5&\u01a7\n&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3)\3*\3*\3"+
		"*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3"+
		".\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3"+
		"\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\64\3\64\3"+
		"\64\3\64\3\64\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\5\66\u01f6\n\66"+
		"\3\67\6\67\u01f9\n\67\r\67\16\67\u01fa\38\38\78\u01ff\n8\f8\168\u0202"+
		"\138\38\38\39\39\79\u0208\n9\f9\169\u020b\139\3:\3:\3;\3;\3<\3<\3=\3="+
		"\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I"+
		"\3I\3J\3J\3K\3K\3L\3L\3L\3M\3M\3M\3N\3N\3N\3O\3O\3O\3P\6P\u023e\nP\rP"+
		"\16P\u023f\3P\3P\2\2Q\3\3\5\2\7\4\t\2\13\2\r\5\17\6\21\2\23\7\25\b\27"+
		"\t\31\2\33\n\35\2\37\2!\13#\f%\r\'\16)\2+\17-\20/\2\61\21\63\22\65\2\67"+
		"\239\24;\2=\25?\2A\26C\27E\2G\30I\31K\32M\33O\34Q\35S\36U\37W Y![\"]#"+
		"_$a%c&e\'g(i)k*m\2o+q,s-u.w/y\60{\61}\62\177\63\u0081\64\u0083\65\u0085"+
		"\66\u0087\67\u00898\u008b9\u008d:\u008f;\u0091<\u0093=\u0095>\u0097?\u0099"+
		"@\u009bA\u009dB\u009fC\3\2\7\3\2\62;\3\2$$\5\2C\\aac|\6\2\62;C\\aac|\5"+
		"\2\13\f\17\17\"\"\2\u026c\2\3\3\2\2\2\2\7\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\33\3\2\2\2\2!\3\2\2\2\2"+
		"#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2\61\3\2\2\2\2"+
		"\63\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2=\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2"+
		"G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3"+
		"\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2"+
		"\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2"+
		"o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3"+
		"\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2"+
		"\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097"+
		"\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2"+
		"\2\3\u00a1\3\2\2\2\5\u00a5\3\2\2\2\7\u00a7\3\2\2\2\t\u00bc\3\2\2\2\13"+
		"\u00c0\3\2\2\2\r\u00db\3\2\2\2\17\u00e9\3\2\2\2\21\u00ee\3\2\2\2\23\u00f0"+
		"\3\2\2\2\25\u00f4\3\2\2\2\27\u0108\3\2\2\2\31\u0113\3\2\2\2\33\u0115\3"+
		"\2\2\2\35\u011d\3\2\2\2\37\u0121\3\2\2\2!\u0123\3\2\2\2#\u0126\3\2\2\2"+
		"%\u0129\3\2\2\2\'\u012b\3\2\2\2)\u0133\3\2\2\2+\u0135\3\2\2\2-\u013f\3"+
		"\2\2\2/\u0143\3\2\2\2\61\u0145\3\2\2\2\63\u0154\3\2\2\2\65\u0159\3\2\2"+
		"\2\67\u015b\3\2\2\29\u015f\3\2\2\2;\u0176\3\2\2\2=\u0178\3\2\2\2?\u017e"+
		"\3\2\2\2A\u0184\3\2\2\2C\u0186\3\2\2\2E\u018c\3\2\2\2G\u0194\3\2\2\2I"+
		"\u019b\3\2\2\2K\u01a6\3\2\2\2M\u01a8\3\2\2\2O\u01ab\3\2\2\2Q\u01ae\3\2"+
		"\2\2S\u01b2\3\2\2\2U\u01b7\3\2\2\2W\u01be\3\2\2\2Y\u01c3\3\2\2\2[\u01c9"+
		"\3\2\2\2]\u01cd\3\2\2\2_\u01d3\3\2\2\2a\u01d7\3\2\2\2c\u01de\3\2\2\2e"+
		"\u01e4\3\2\2\2g\u01e8\3\2\2\2i\u01ed\3\2\2\2k\u01f5\3\2\2\2m\u01f8\3\2"+
		"\2\2o\u01fc\3\2\2\2q\u0205\3\2\2\2s\u020c\3\2\2\2u\u020e\3\2\2\2w\u0210"+
		"\3\2\2\2y\u0212\3\2\2\2{\u0214\3\2\2\2}\u0216\3\2\2\2\177\u0218\3\2\2"+
		"\2\u0081\u021a\3\2\2\2\u0083\u021c\3\2\2\2\u0085\u021e\3\2\2\2\u0087\u0220"+
		"\3\2\2\2\u0089\u0222\3\2\2\2\u008b\u0224\3\2\2\2\u008d\u0226\3\2\2\2\u008f"+
		"\u0228\3\2\2\2\u0091\u022a\3\2\2\2\u0093\u022c\3\2\2\2\u0095\u022e\3\2"+
		"\2\2\u0097\u0230\3\2\2\2\u0099\u0233\3\2\2\2\u009b\u0236\3\2\2\2\u009d"+
		"\u0239\3\2\2\2\u009f\u023d\3\2\2\2\u00a1\u00a2\5\7\4\2\u00a2\u00a3\5\5"+
		"\3\2\u00a3\4\3\2\2\2\u00a4\u00a6\5\3\2\2\u00a5\u00a4\3\2\2\2\u00a5\u00a6"+
		"\3\2\2\2\u00a6\6\3\2\2\2\u00a7\u00a8\5_\60\2\u00a8\u00a9\5q9\2\u00a9\u00aa"+
		"\7*\2\2\u00aa\u00ab\5\t\5\2\u00ab\u00ac\7+\2\2\u00ac\u00ad\7}\2\2\u00ad"+
		"\u00ae\5-\27\2\u00ae\u00af\7\177\2\2\u00af\b\3\2\2\2\u00b0\u00b1\5e\63"+
		"\2\u00b1\u00b2\5q9\2\u00b2\u00b3\5\13\6\2\u00b3\u00bd\3\2\2\2\u00b4\u00b5"+
		"\5c\62\2\u00b5\u00b6\5q9\2\u00b6\u00b7\5\13\6\2\u00b7\u00bd\3\2\2\2\u00b8"+
		"\u00b9\5a\61\2\u00b9\u00ba\5q9\2\u00ba\u00bb\5\13\6\2\u00bb\u00bd\3\2"+
		"\2\2\u00bc\u00b0\3\2\2\2\u00bc\u00b4\3\2\2\2\u00bc\u00b8\3\2\2\2\u00bc"+
		"\u00bd\3\2\2\2\u00bd\n\3\2\2\2\u00be\u00bf\7.\2\2\u00bf\u00c1\5\t\5\2"+
		"\u00c0\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\f\3\2\2\2\u00c2\u00c3\5"+
		"\17\b\2\u00c3\u00c4\5\177@\2\u00c4\u00dc\3\2\2\2\u00c5\u00c6\5\25\13\2"+
		"\u00c6\u00c7\5\177@\2\u00c7\u00dc\3\2\2\2\u00c8\u00c9\5!\21\2\u00c9\u00ca"+
		"\5\177@\2\u00ca\u00dc\3\2\2\2\u00cb\u00cc\5#\22\2\u00cc\u00cd\5\177@\2"+
		"\u00cd\u00dc\3\2\2\2\u00ce\u00cf\5%\23\2\u00cf\u00d0\5\177@\2\u00d0\u00dc"+
		"\3\2\2\2\u00d1\u00dc\5\'\24\2\u00d2\u00dc\5+\26\2\u00d3\u00d4\7}\2\2\u00d4"+
		"\u00d5\5-\27\2\u00d5\u00d6\7\177\2\2\u00d6\u00dc\3\2\2\2\u00d7\u00d8\5"+
		"]/\2\u00d8\u00d9\5\177@\2\u00d9\u00dc\3\2\2\2\u00da\u00dc\5\177@\2\u00db"+
		"\u00c2\3\2\2\2\u00db\u00c5\3\2\2\2\u00db\u00c8\3\2\2\2\u00db\u00cb\3\2"+
		"\2\2\u00db\u00ce\3\2\2\2\u00db\u00d1\3\2\2\2\u00db\u00d2\3\2\2\2\u00db"+
		"\u00d3\3\2\2\2\u00db\u00d7\3\2\2\2\u00db\u00da\3\2\2\2\u00dc\16\3\2\2"+
		"\2\u00dd\u00de\5e\63\2\u00de\u00df\5q9\2\u00df\u00e0\5\21\t\2\u00e0\u00ea"+
		"\3\2\2\2\u00e1\u00e2\5c\62\2\u00e2\u00e3\5q9\2\u00e3\u00e4\5\21\t\2\u00e4"+
		"\u00ea\3\2\2\2\u00e5\u00e6\5a\61\2\u00e6\u00e7\5q9\2\u00e7\u00e8\5\21"+
		"\t\2\u00e8\u00ea\3\2\2\2\u00e9\u00dd\3\2\2\2\u00e9\u00e1\3\2\2\2\u00e9"+
		"\u00e5\3\2\2\2\u00ea\20\3\2\2\2\u00eb\u00ec\5\23\n\2\u00ec\u00ed\5\21"+
		"\t\2\u00ed\u00ef\3\2\2\2\u00ee\u00eb\3\2\2\2\u00ee\u00ef\3\2\2\2\u00ef"+
		"\22\3\2\2\2\u00f0\u00f1\7]\2\2\u00f1\u00f2\5e\63\2\u00f2\u00f3\7_\2\2"+
		"\u00f3\24\3\2\2\2\u00f4\u00f5\5M\'\2\u00f5\u00f6\5\177@\2\u00f6\u00f7"+
		"\5\27\f\2\u00f7\26\3\2\2\2\u00f8\u00f9\5q9\2\u00f9\u00fa\5\31\r\2\u00fa"+
		"\u0109\3\2\2\2\u00fb\u0109\5\61\31\2\u00fc\u00fd\7-\2\2\u00fd\u0109\5"+
		"K&\2\u00fe\u00ff\7/\2\2\u00ff\u0109\5K&\2\u0100\u0109\5e\63\2\u0101\u0109"+
		"\5c\62\2\u0102\u0109\5a\61\2\u0103\u0109\5g\64\2\u0104\u0105\7*\2\2\u0105"+
		"\u0106\5=\37\2\u0106\u0107\7+\2\2\u0107\u0109\3\2\2\2\u0108\u00f8\3\2"+
		"\2\2\u0108\u00fb\3\2\2\2\u0108\u00fc\3\2\2\2\u0108\u00fe\3\2\2\2\u0108"+
		"\u0100\3\2\2\2\u0108\u0101\3\2\2\2\u0108\u0102\3\2\2\2\u0108\u0103\3\2"+
		"\2\2\u0108\u0104\3\2\2\2\u0109\30\3\2\2\2\u010a\u010b\5\65\33\2\u010b"+
		"\u010c\5E#\2\u010c\u010d\5? \2\u010d\u010e\5;\36\2\u010e\u0114\3\2\2\2"+
		"\u010f\u0110\7*\2\2\u0110\u0111\5\35\17\2\u0111\u0112\7+\2\2\u0112\u0114"+
		"\3\2\2\2\u0113\u010a\3\2\2\2\u0113\u010f\3\2\2\2\u0114\32\3\2\2\2\u0115"+
		"\u0116\5q9\2\u0116\u0117\7*\2\2\u0117\u0118\5\35\17\2\u0118\u0119\7+\2"+
		"\2\u0119\34\3\2\2\2\u011a\u011b\5q9\2\u011b\u011c\5\37\20\2\u011c\u011e"+
		"\3\2\2\2\u011d\u011a\3\2\2\2\u011d\u011e\3\2\2\2\u011e\36\3\2\2\2\u011f"+
		"\u0120\7.\2\2\u0120\u0122\5\35\17\2\u0121\u011f\3\2\2\2\u0121\u0122\3"+
		"\2\2\2\u0122 \3\2\2\2\u0123\u0124\5Y-\2\u0124\u0125\59\35\2\u0125\"\3"+
		"\2\2\2\u0126\u0127\5W,\2\u0127\u0128\5M\'\2\u0128$\3\2\2\2\u0129\u012a"+
		"\5U+\2\u012a&\3\2\2\2\u012b\u012c\5O(\2\u012c\u012d\59\35\2\u012d\u012e"+
		"\5\r\7\2\u012e\u012f\5)\25\2\u012f(\3\2\2\2\u0130\u0131\5S*\2\u0131\u0132"+
		"\5\r\7\2\u0132\u0134\3\2\2\2\u0133\u0130\3\2\2\2\u0133\u0134\3\2\2\2\u0134"+
		"*\3\2\2\2\u0135\u0136\5Q)\2\u0136\u0137\7*\2\2\u0137\u0138\5\25\13\2\u0138"+
		"\u0139\5\177@\2\u0139\u013a\59\35\2\u013a\u013b\5\177@\2\u013b\u013c\5"+
		"\25\13\2\u013c\u013d\7+\2\2\u013d\u013e\5\r\7\2\u013e,\3\2\2\2\u013f\u0140"+
		"\5\r\7\2\u0140\u0141\5/\30\2\u0141.\3\2\2\2\u0142\u0144\5-\27\2\u0143"+
		"\u0142\3\2\2\2\u0143\u0144\3\2\2\2\u0144\60\3\2\2\2\u0145\u0146\5[.\2"+
		"\u0146\u0147\5\63\32\2\u0147\62\3\2\2\2\u0148\u0149\5e\63\2\u0149\u014a"+
		"\5\67\34\2\u014a\u014b\5\65\33\2\u014b\u0155\3\2\2\2\u014c\u014d\5c\62"+
		"\2\u014d\u014e\5\67\34\2\u014e\u014f\5\65\33\2\u014f\u0155\3\2\2\2\u0150"+
		"\u0151\5a\61\2\u0151\u0152\5\67\34\2\u0152\u0153\5\65\33\2\u0153\u0155"+
		"\3\2\2\2\u0154\u0148\3\2\2\2\u0154\u014c\3\2\2\2\u0154\u0150\3\2\2\2\u0155"+
		"\64\3\2\2\2\u0156\u0157\5\67\34\2\u0157\u0158\5\65\33\2\u0158\u015a\3"+
		"\2\2\2\u0159\u0156\3\2\2\2\u0159\u015a\3\2\2\2\u015a\66\3\2\2\2\u015b"+
		"\u015c\7]\2\2\u015c\u015d\5=\37\2\u015d\u015e\7_\2\2\u015e8\3\2\2\2\u015f"+
		"\u0160\5=\37\2\u0160\u0161\5;\36\2\u0161:\3\2\2\2\u0162\u0163\7>\2\2\u0163"+
		"\u0177\5=\37\2\u0164\u0165\7@\2\2\u0165\u0177\5=\37\2\u0166\u0167\7>\2"+
		"\2\u0167\u0168\7?\2\2\u0168\u0169\3\2\2\2\u0169\u0177\5=\37\2\u016a\u016b"+
		"\7@\2\2\u016b\u016c\7?\2\2\u016c\u016d\3\2\2\2\u016d\u0177\5=\37\2\u016e"+
		"\u016f\7?\2\2\u016f\u0170\7?\2\2\u0170\u0171\3\2\2\2\u0171\u0177\5=\37"+
		"\2\u0172\u0173\7#\2\2\u0173\u0174\7?\2\2\u0174\u0175\3\2\2\2\u0175\u0177"+
		"\5=\37\2\u0176\u0162\3\2\2\2\u0176\u0164\3\2\2\2\u0176\u0166\3\2\2\2\u0176"+
		"\u016a\3\2\2\2\u0176\u016e\3\2\2\2\u0176\u0172\3\2\2\2\u0176\u0177\3\2"+
		"\2\2\u0177<\3\2\2\2\u0178\u0179\5C\"\2\u0179\u017a\5? \2\u017a>\3\2\2"+
		"\2\u017b\u017c\5A!\2\u017c\u017d\5? \2\u017d\u017f\3\2\2\2\u017e\u017b"+
		"\3\2\2\2\u017e\u017f\3\2\2\2\u017f@\3\2\2\2\u0180\u0181\7-\2\2\u0181\u0185"+
		"\5C\"\2\u0182\u0183\7/\2\2\u0183\u0185\5C\"\2\u0184\u0180\3\2\2\2\u0184"+
		"\u0182\3\2\2\2\u0185B\3\2\2\2\u0186\u0187\5I%\2\u0187\u0188\5E#\2\u0188"+
		"D\3\2\2\2\u0189\u018a\5G$\2\u018a\u018b\5E#\2\u018b\u018d\3\2\2\2\u018c"+
		"\u0189\3\2\2\2\u018c\u018d\3\2\2\2\u018dF\3\2\2\2\u018e\u018f\7,\2\2\u018f"+
		"\u0195\5I%\2\u0190\u0191\7\61\2\2\u0191\u0195\5I%\2\u0192\u0193\7\'\2"+
		"\2\u0193\u0195\5I%\2\u0194\u018e\3\2\2\2\u0194\u0190\3\2\2\2\u0194\u0192"+
		"\3\2\2\2\u0195H\3\2\2\2\u0196\u0197\7-\2\2\u0197\u019c\5K&\2\u0198\u0199"+
		"\7/\2\2\u0199\u019c\5K&\2\u019a\u019c\5K&\2\u019b\u0196\3\2\2\2\u019b"+
		"\u0198\3\2\2\2\u019b\u019a\3\2\2\2\u019cJ\3\2\2\2\u019d\u01a7\5e\63\2"+
		"\u019e\u01a7\5c\62\2\u019f\u01a7\5a\61\2\u01a0\u01a7\5g\64\2\u01a1\u01a7"+
		"\5M\'\2\u01a2\u01a3\7*\2\2\u01a3\u01a4\5=\37\2\u01a4\u01a5\7+\2\2\u01a5"+
		"\u01a7\3\2\2\2\u01a6\u019d\3\2\2\2\u01a6\u019e\3\2\2\2\u01a6\u019f\3\2"+
		"\2\2\u01a6\u01a0\3\2\2\2\u01a6\u01a1\3\2\2\2\u01a6\u01a2\3\2\2\2\u01a7"+
		"L\3\2\2\2\u01a8\u01a9\5q9\2\u01a9\u01aa\5\65\33\2\u01aaN\3\2\2\2\u01ab"+
		"\u01ac\7k\2\2\u01ac\u01ad\7h\2\2\u01adP\3\2\2\2\u01ae\u01af\7h\2\2\u01af"+
		"\u01b0\7q\2\2\u01b0\u01b1\7t\2\2\u01b1R\3\2\2\2\u01b2\u01b3\7g\2\2\u01b3"+
		"\u01b4\7n\2\2\u01b4\u01b5\7u\2\2\u01b5\u01b6\7g\2\2\u01b6T\3\2\2\2\u01b7"+
		"\u01b8\7t\2\2\u01b8\u01b9\7g\2\2\u01b9\u01ba\7v\2\2\u01ba\u01bb\7w\2\2"+
		"\u01bb\u01bc\7t\2\2\u01bc\u01bd\7p\2\2\u01bdV\3\2\2\2\u01be\u01bf\7t\2"+
		"\2\u01bf\u01c0\7g\2\2\u01c0\u01c1\7c\2\2\u01c1\u01c2\7f\2\2\u01c2X\3\2"+
		"\2\2\u01c3\u01c4\7r\2\2\u01c4\u01c5\7t\2\2\u01c5\u01c6\7k\2\2\u01c6\u01c7"+
		"\7p\2\2\u01c7\u01c8\7v\2\2\u01c8Z\3\2\2\2\u01c9\u01ca\7p\2\2\u01ca\u01cb"+
		"\7g\2\2\u01cb\u01cc\7y\2\2\u01cc\\\3\2\2\2\u01cd\u01ce\7d\2\2\u01ce\u01cf"+
		"\7t\2\2\u01cf\u01d0\7g\2\2\u01d0\u01d1\7c\2\2\u01d1\u01d2\7m\2\2\u01d2"+
		"^\3\2\2\2\u01d3\u01d4\7f\2\2\u01d4\u01d5\7g\2\2\u01d5\u01d6\7h\2\2\u01d6"+
		"`\3\2\2\2\u01d7\u01d8\7u\2\2\u01d8\u01d9\7v\2\2\u01d9\u01da\7t\2\2\u01da"+
		"\u01db\7k\2\2\u01db\u01dc\7p\2\2\u01dc\u01dd\7i\2\2\u01ddb\3\2\2\2\u01de"+
		"\u01df\7h\2\2\u01df\u01e0\7n\2\2\u01e0\u01e1\7q\2\2\u01e1\u01e2\7c\2\2"+
		"\u01e2\u01e3\7v\2\2\u01e3d\3\2\2\2\u01e4\u01e5\7k\2\2\u01e5\u01e6\7p\2"+
		"\2\u01e6\u01e7\7v\2\2\u01e7f\3\2\2\2\u01e8\u01e9\7p\2\2\u01e9\u01ea\7"+
		"w\2\2\u01ea\u01eb\7n\2\2\u01eb\u01ec\7n\2\2\u01ech\3\2\2\2\u01ed\u01ee"+
		"\5m\67\2\u01eej\3\2\2\2\u01ef\u01f0\5m\67\2\u01f0\u01f1\7\60\2\2\u01f1"+
		"\u01f2\5m\67\2\u01f2\u01f6\3\2\2\2\u01f3\u01f4\7\60\2\2\u01f4\u01f6\5"+
		"m\67\2\u01f5\u01ef\3\2\2\2\u01f5\u01f3\3\2\2\2\u01f6l\3\2\2\2\u01f7\u01f9"+
		"\t\2\2\2\u01f8\u01f7\3\2\2\2\u01f9\u01fa\3\2\2\2\u01fa\u01f8\3\2\2\2\u01fa"+
		"\u01fb\3\2\2\2\u01fbn\3\2\2\2\u01fc\u0200\7$\2\2\u01fd\u01ff\n\3\2\2\u01fe"+
		"\u01fd\3\2\2\2\u01ff\u0202\3\2\2\2\u0200\u01fe\3\2\2\2\u0200\u0201\3\2"+
		"\2\2\u0201\u0203\3\2\2\2\u0202\u0200\3\2\2\2\u0203\u0204\7$\2\2\u0204"+
		"p\3\2\2\2\u0205\u0209\t\4\2\2\u0206\u0208\t\5\2\2\u0207\u0206\3\2\2\2"+
		"\u0208\u020b\3\2\2\2\u0209\u0207\3\2\2\2\u0209\u020a\3\2\2\2\u020ar\3"+
		"\2\2\2\u020b\u0209\3\2\2\2\u020c\u020d\7*\2\2\u020dt\3\2\2\2\u020e\u020f"+
		"\7+\2\2\u020fv\3\2\2\2\u0210\u0211\7}\2\2\u0211x\3\2\2\2\u0212\u0213\7"+
		"\177\2\2\u0213z\3\2\2\2\u0214\u0215\7]\2\2\u0215|\3\2\2\2\u0216\u0217"+
		"\7_\2\2\u0217~\3\2\2\2\u0218\u0219\7=\2\2\u0219\u0080\3\2\2\2\u021a\u021b"+
		"\7.\2\2\u021b\u0082\3\2\2\2\u021c\u021d\7\60\2\2\u021d\u0084\3\2\2\2\u021e"+
		"\u021f\7<\2\2\u021f\u0086\3\2\2\2\u0220\u0221\7?\2\2\u0221\u0088\3\2\2"+
		"\2\u0222\u0223\7-\2\2\u0223\u008a\3\2\2\2\u0224\u0225\7/\2\2\u0225\u008c"+
		"\3\2\2\2\u0226\u0227\7,\2\2\u0227\u008e\3\2\2\2\u0228\u0229\7\61\2\2\u0229"+
		"\u0090\3\2\2\2\u022a\u022b\7\'\2\2\u022b\u0092\3\2\2\2\u022c\u022d\7@"+
		"\2\2\u022d\u0094\3\2\2\2\u022e\u022f\7>\2\2\u022f\u0096\3\2\2\2\u0230"+
		"\u0231\7?\2\2\u0231\u0232\7?\2\2\u0232\u0098\3\2\2\2\u0233\u0234\7>\2"+
		"\2\u0234\u0235\7?\2\2\u0235\u009a\3\2\2\2\u0236\u0237\7@\2\2\u0237\u0238"+
		"\7?\2\2\u0238\u009c\3\2\2\2\u0239\u023a\7#\2\2\u023a\u023b\7?\2\2\u023b"+
		"\u009e\3\2\2\2\u023c\u023e\t\6\2\2\u023d\u023c\3\2\2\2\u023e\u023f\3\2"+
		"\2\2\u023f\u023d\3\2\2\2\u023f\u0240\3\2\2\2\u0240\u0241\3\2\2\2\u0241"+
		"\u0242\bP\2\2\u0242\u00a0\3\2\2\2\35\2\u00a5\u00bc\u00c0\u00db\u00e9\u00ee"+
		"\u0108\u0113\u011d\u0121\u0133\u0143\u0154\u0159\u0176\u017e\u0184\u018c"+
		"\u0194\u019b\u01a6\u01f5\u01fa\u0200\u0209\u023f\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}